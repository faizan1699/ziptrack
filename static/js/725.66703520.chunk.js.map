{"version":3,"file":"static/js/725.66703520.chunk.js","mappings":"mLAKA,MAwCA,EAxCwBA,IAAiC,IAAhC,aAAEC,EAAY,SAAEC,GAAUF,EAEjD,MAAOG,EAAOC,IAAYC,EAAAA,EAAAA,UAASJ,GAAgB,IAC7CK,GAAUC,EAAAA,EAAAA,UAAQ,IAAMC,MAAcC,WAAW,IAqBvD,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLL,QAASA,EACTH,MAAOA,EACPD,SATmBU,IACrBR,EAASQ,GACTV,GAAYA,EAASU,EAAe,EAQlCC,YAAY,mBACZC,WAAY,CAAEC,OAzBGC,IAAA,IAAC,WAAEC,EAAU,MAAEC,EAAK,KAAEC,GAAMH,EAAA,OAC/CI,EAAAA,EAAAA,MAAA,UAASH,EAAUI,SAAA,EACjBX,EAAAA,EAAAA,KAAA,QAAAW,UAEEX,EAAAA,EAAAA,KAAA,OACEY,IAAG,+BAAAC,OAAiCJ,EAAKhB,MAAK,gBAC9CqB,IAAKN,EACLO,MAAO,CAAEC,YAAa,WAGzBR,IACG,IAeJ,C","sources":["topbar/navbar/countrydropdown/CountryDropdown.jsx"],"sourcesContent":["import React, { useState, useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Select from 'react-select';\r\nimport countryList from 'react-select-country-list';\r\n\r\nconst CountryDropdown = ({ defaultValue, onChange }) => {\r\n  \r\n  const [value, setValue] = useState(defaultValue || '');\r\n  const options = useMemo(() => countryList().getData(), []);\r\n\r\n  const customOption = ({ innerProps, label, data }) => (\r\n    <div {...innerProps}>\r\n      <span >\r\n        {/* You can replace 'data.value' with the appropriate method to get country flag/icon */}\r\n        <img\r\n          src={`https://www.countryflags.io/${data.value}/flat/32.png`}\r\n          alt={label}\r\n          style={{ marginRight: '8px' }}\r\n        />\r\n      </span>\r\n      {label}\r\n    </div>\r\n  );\r\n\r\n  const changeHandler = (selectedOption) => {\r\n    setValue(selectedOption);\r\n    onChange && onChange(selectedOption);\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      options={options}\r\n      value={value}\r\n      onChange={changeHandler}\r\n      placeholder=\"Select a country\"\r\n      components={{ Option: customOption }}\r\n    />\r\n  );\r\n};\r\n\r\nCountryDropdown.propTypes = {\r\n  defaultValue: PropTypes.string, // Default country code\r\n  onChange: PropTypes.func, // Callback when the country is changed\r\n};\r\n\r\nexport default CountryDropdown;\r\n"],"names":["_ref","defaultValue","onChange","value","setValue","useState","options","useMemo","countryList","getData","_jsx","Select","selectedOption","placeholder","components","Option","_ref2","innerProps","label","data","_jsxs","children","src","concat","alt","style","marginRight"],"sourceRoot":""}